name: Release ðŸš€

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feat/docker-image-revisiting
    paths:
      - src/**
      - Cargo.toml

env:
  RUST_TOOLCHAIN: nightly-2023-05-03
  BUILD_VERSION_PREFIX: v0.1.7-prerelease
  CARGO_PROFILE: release

permissions:
  contents: write

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Show cargo version
        run: cargo --version
      - name: Install cross
        run: |
          cargo install cross --git https://github.com/cross-rs/cross
      - name: Fetch
        run: |
          cargo fetch
      - name: Build x86_64-unknown-linux-musl
        run: |
          cargo clean && cross build --target=x86_64-unknown-linux-musl --release
      - name: Package x86_64-unknown-linux-musl
        run: |            
            mkdir -p docker/ci/amd64/ &&
            mv target/x86_64-unknown-linux-musl/release/excalidocker docker/ci/amd64/
            ls -lah
            ls -lah target
            ls -lah docker/ci/amd64/
          
      - name: Build aarch64-unknown-linux-musl
        run: |
          cargo clean && cross build --target=aarch64-unknown-linux-musl --release
          
      - name: Package aarch64-unknown-linux-musl
        run: |
          mkdir -p docker/ci/arm64/ &&
          mv target/aarch64-unknown-linux-musl/release/excalidocker docker/ci/arm64/
          ls -lah
          ls -lah target
          ls -lah docker/ci/arm64/

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure tag
        shell: bash
        run: |
          buildTime=`date "+%Y%m%d"`
          SCHEDULED_BUILD_VERSION=${{ env.BUILD_VERSION_PREFIX }}-$buildTime
          echo "IMAGE_TAG=${SCHEDULED_BUILD_VERSION:1}" >> $GITHUB_ENV          

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up buildx
        uses: docker/setup-buildx-action@v2

      - name: Unzip the amd64 artifacts
        run: |
          cp excalidocker-config.yaml docker/ci/amd64/
          chmod + entrypoint.sh
          cp entrypoint.sh docker/ci/amd64/
          ls -la docker/ci/amd64

      - name: Unzip the arm64 artifacts
        id: unzip-arm64
        run: |
          cp excalidocker-config.yaml docker/ci/arm64/
          chmod + entrypoint.sh
          cp entrypoint.sh docker/ci/arm64/
          ls -la docker/ci/arm64

      - name: Build and push all
        uses: docker/build-push-action@v3
        with:
          context: ./docker/ci/
          file: ./docker/ci/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            etolbakov/excalidocker:${{ env.IMAGE_TAG }}

      - name: validation
        run: |          
          echo "valdation 2"
          docker run --rm --pull always -e INPUT_PATH=https://github.com/apache/pinot/blob/master/docker/images/pinot/docker-compose.yml etolbakov/excalidocker:0.1.7-prerelease-20230630 
